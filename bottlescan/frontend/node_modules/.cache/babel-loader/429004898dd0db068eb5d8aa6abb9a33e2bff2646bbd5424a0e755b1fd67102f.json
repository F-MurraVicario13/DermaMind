{"ast":null,"code":"var _jsxFileName = \"/Users/fernandomurravicario/App/DermaMind/bottlescan/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Camera, Upload, CheckCircle, AlertTriangle, XCircle, Sparkles, Info, ShoppingCart, DollarSign, Star, ExternalLink } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BottleScanDemo = () => {\n  _s();\n  const [step, setStep] = useState('upload');\n  const [analysis, setAnalysis] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [productRecommendations, setProductRecommendations] = useState([]);\n  const [priceComparison, setPriceComparison] = useState(null);\n  const [showRecommendations, setShowRecommendations] = useState(false);\n  const [loadingRecommendations, setLoadingRecommendations] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  // Mock health scores based on your spec\n  const healthScoreDB = {\n    'niacinamide': {\n      score: 90,\n      reason: 'Beneficial vitamin B3; skin brightening and barrier support'\n    },\n    'glycerin': {\n      score: 88,\n      reason: 'Excellent humectant; hydrates and improves skin barrier'\n    },\n    'hyaluronic acid': {\n      score: 92,\n      reason: 'Superior hydration; holds 1000x its weight in water'\n    },\n    'aqua': {\n      score: 95,\n      reason: 'Water - universal solvent, completely safe'\n    },\n    'butylene glycol': {\n      score: 70,\n      reason: 'Humectant and penetration enhancer; generally safe'\n    },\n    'tocopherol': {\n      score: 85,\n      reason: 'Vitamin E; antioxidant with skin-protective properties'\n    },\n    'methylparaben': {\n      score: 15,\n      reason: 'Preservative with endocrine disruption concerns'\n    },\n    'propylparaben': {\n      score: 12,\n      reason: 'Paraben preservative; potential hormone disruptor'\n    },\n    'parfum': {\n      score: 20,\n      reason: 'Fragrance - common allergen, often contains phthalates'\n    },\n    'fragrance': {\n      score: 20,\n      reason: 'Synthetic fragrance - allergen risk, no functional benefit'\n    },\n    'sodium lauryl sulfate': {\n      score: 25,\n      reason: 'Harsh surfactant; can strip natural oils and irritate'\n    },\n    'phenoxyethanol': {\n      score: 45,\n      reason: 'Preservative with moderate safety concerns'\n    },\n    'retinol': {\n      score: 82,\n      reason: 'Vitamin A derivative; anti-aging but can be irritating'\n    },\n    'ascorbic acid': {\n      score: 88,\n      reason: 'Vitamin C; brightening and antioxidant properties'\n    }\n  };\n  const substitutes = {\n    'methylparaben': [{\n      name: 'leucidal liquid',\n      score: 75,\n      type: 'Fermented radish root; natural preservative'\n    }, {\n      name: 'sodium benzoate',\n      score: 65,\n      type: 'Food-grade preservative; safer alternative'\n    }],\n    'parfum': [{\n      name: 'fragrance-free formulation',\n      score: 95,\n      type: 'Remove entirely for sensitive skin'\n    }, {\n      name: 'essential oil blend',\n      score: 60,\n      type: 'Natural fragrance (still potential allergen)'\n    }],\n    'sodium lauryl sulfate': [{\n      name: 'sodium cocoyl isethionate',\n      score: 78,\n      type: 'Gentle coconut-derived surfactant'\n    }, {\n      name: 'decyl glucoside',\n      score: 82,\n      type: 'Mild sugar-based cleanser'\n    }]\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setTimeout(() => simulateOCR(), 1500);\n      };\n      reader.readAsDataURL(file);\n      setStep('processing');\n    }\n  };\n  const simulateOCR = () => {\n    const mockIngredients = ['Aqua', 'Glycerin', 'Niacinamide', 'Butylene Glycol', 'Phenoxyethanol', 'Parfum', 'Methylparaben'];\n    setStep('results');\n    analyzeIngredients(mockIngredients);\n  };\n  const analyzeIngredients = ingList => {\n    const analyzed = ingList.map(ing => {\n      const normalized = ing.toLowerCase();\n      const data = healthScoreDB[normalized] || {\n        score: 60,\n        reason: 'Common ingredient; limited safety data available'\n      };\n      return {\n        ingredient: ing,\n        normalized,\n        ...data\n      };\n    });\n    const avgScore = Math.round(analyzed.reduce((sum, item) => sum + item.score, 0) / analyzed.length);\n    const flaggedIngredients = analyzed.filter(i => i.score < 50);\n    setAnalysis({\n      ingredients: analyzed,\n      productScore: avgScore,\n      flaggedIngredients: flaggedIngredients\n    });\n\n    // If there are flagged ingredients, get product recommendations\n    if (flaggedIngredients.length > 0) {\n      getProductRecommendations(flaggedIngredients.map(i => i.ingredient));\n    }\n  };\n  const getProductRecommendations = async flaggedIngredients => {\n    console.log('Fetching product recommendations for:', flaggedIngredients);\n    setLoadingRecommendations(true);\n    setApiError(null);\n    try {\n      const response = await fetch('http://localhost:8000/recommend-products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          flagged_ingredients: flaggedIngredients,\n          original_category: 'serum',\n          // Default category\n          skin_type: ['combination', 'oily'],\n          concerns: ['acne', 'texture'],\n          max_results: 5\n        })\n      });\n      console.log('Response status:', response.status);\n      if (response.ok) {\n        const recommendations = await response.json();\n        console.log('Received recommendations:', recommendations);\n        setProductRecommendations(recommendations);\n        setShowRecommendations(true);\n      } else {\n        const errorText = await response.text();\n        console.error('API Error:', response.status, errorText);\n        setApiError(`API Error: ${response.status} - ${errorText}`);\n        setProductRecommendations([]);\n        setShowRecommendations(true);\n      }\n    } catch (error) {\n      console.error('Network Error fetching product recommendations:', error);\n      setApiError(`Network Error: ${error.message}`);\n      setProductRecommendations([]);\n      setShowRecommendations(true);\n    } finally {\n      setLoadingRecommendations(false);\n    }\n  };\n  const getPriceComparison = async productId => {\n    console.log('Fetching price comparison for product:', productId);\n    try {\n      const response = await fetch(`http://localhost:8000/price-comparison/${productId}`);\n      console.log('Price comparison response status:', response.status);\n      if (response.ok) {\n        const priceData = await response.json();\n        console.log('Received price data:', priceData);\n        setPriceComparison(priceData);\n      } else {\n        console.error('Price comparison API Error:', response.status, await response.text());\n      }\n    } catch (error) {\n      console.error('Network Error fetching price comparison:', error);\n    }\n  };\n  const getScoreColor = score => {\n    if (score >= 76) return 'text-green-600';\n    if (score >= 51) return 'text-yellow-600';\n    if (score >= 26) return 'text-orange-600';\n    return 'text-red-600';\n  };\n  const getScoreIcon = score => {\n    if (score >= 76) return /*#__PURE__*/_jsxDEV(CheckCircle, {\n      className: \"w-5 h-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }, this);\n    if (score >= 51) return /*#__PURE__*/_jsxDEV(Info, {\n      className: \"w-5 h-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }, this);\n    if (score >= 26) return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n      className: \"w-5 h-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(XCircle, {\n      className: \"w-5 h-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 12\n    }, this);\n  };\n  const getScoreLabel = score => {\n    if (score >= 76) return 'Healthy / Preferred';\n    if (score >= 51) return 'Generally Okay';\n    if (score >= 26) return 'Use with Caution';\n    return 'Avoid';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center gap-3 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            className: \"w-8 h-8 text-indigo-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold text-gray-800\",\n            children: \"BottleScan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Skincare OCR & Ingredient Health Advisor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2\",\n          children: \"Powered by Kaggle Skincare Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), step === 'upload' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-2xl shadow-lg p-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), step === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-2xl shadow-lg p-8 text-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), step === 'results' && analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg p-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg p-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), showRecommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg p-8\",\n          children: [productRecommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid gap-6 md:grid-cols-2\",\n            children: productRecommendations.map((product, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-xl p-6 hover:shadow-md transition-shadow\"\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this), priceComparison && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 p-4 bg-gray-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mb-3\",\n              children: [\"\\uD83D\\uDCB0 Price Comparison for \", priceComparison.product_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid gap-3 md:grid-cols-2\",\n              children: priceComparison.price_sources.map((source, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between p-3 bg-white rounded border\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium\",\n                    children: source.retailer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600\",\n                    children: source.shipping\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-bold text-green-600\",\n                    children: [\"$\", source.price.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: source.in_stock ? \"In Stock\" : \"Out of Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 27\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), analysis.flaggedIngredients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg p-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-center text-sm text-gray-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Health scores based on ingredient frequency analysis, safety databases, and clinical research\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1\",\n          children: \"Data source: Skincare Products Clean Dataset (Kaggle)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(BottleScanDemo, \"8bW2CfgG55VKsyD7N1stC+Z1VfI=\");\n_c = BottleScanDemo;\nexport default BottleScanDemo;\nvar _c;\n$RefreshReg$(_c, \"BottleScanDemo\");","map":{"version":3,"names":["React","useState","Camera","Upload","CheckCircle","AlertTriangle","XCircle","Sparkles","Info","ShoppingCart","DollarSign","Star","ExternalLink","jsxDEV","_jsxDEV","BottleScanDemo","_s","step","setStep","analysis","setAnalysis","imagePreview","setImagePreview","productRecommendations","setProductRecommendations","priceComparison","setPriceComparison","showRecommendations","setShowRecommendations","loadingRecommendations","setLoadingRecommendations","apiError","setApiError","healthScoreDB","score","reason","substitutes","name","type","handleImageUpload","e","file","target","files","reader","FileReader","onloadend","result","setTimeout","simulateOCR","readAsDataURL","mockIngredients","analyzeIngredients","ingList","analyzed","map","ing","normalized","toLowerCase","data","ingredient","avgScore","Math","round","reduce","sum","item","length","flaggedIngredients","filter","i","ingredients","productScore","getProductRecommendations","console","log","response","fetch","method","headers","body","JSON","stringify","flagged_ingredients","original_category","skin_type","concerns","max_results","status","ok","recommendations","json","errorText","text","error","message","getPriceComparison","productId","priceData","getScoreColor","getScoreIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getScoreLabel","children","product","idx","product_name","price_sources","source","retailer","shipping","price","toFixed","in_stock","_c","$RefreshReg$"],"sources":["/Users/fernandomurravicario/App/DermaMind/bottlescan/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Camera, Upload, CheckCircle, AlertTriangle, XCircle, Sparkles, Info, ShoppingCart, DollarSign, Star, ExternalLink } from 'lucide-react';\n\nconst BottleScanDemo = () => {\n  const [step, setStep] = useState('upload');\n  const [analysis, setAnalysis] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [productRecommendations, setProductRecommendations] = useState([]);\n  const [priceComparison, setPriceComparison] = useState(null);\n  const [showRecommendations, setShowRecommendations] = useState(false);\n  const [loadingRecommendations, setLoadingRecommendations] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  // Mock health scores based on your spec\n  const healthScoreDB = {\n    'niacinamide': { score: 90, reason: 'Beneficial vitamin B3; skin brightening and barrier support' },\n    'glycerin': { score: 88, reason: 'Excellent humectant; hydrates and improves skin barrier' },\n    'hyaluronic acid': { score: 92, reason: 'Superior hydration; holds 1000x its weight in water' },\n    'aqua': { score: 95, reason: 'Water - universal solvent, completely safe' },\n    'butylene glycol': { score: 70, reason: 'Humectant and penetration enhancer; generally safe' },\n    'tocopherol': { score: 85, reason: 'Vitamin E; antioxidant with skin-protective properties' },\n    'methylparaben': { score: 15, reason: 'Preservative with endocrine disruption concerns' },\n    'propylparaben': { score: 12, reason: 'Paraben preservative; potential hormone disruptor' },\n    'parfum': { score: 20, reason: 'Fragrance - common allergen, often contains phthalates' },\n    'fragrance': { score: 20, reason: 'Synthetic fragrance - allergen risk, no functional benefit' },\n    'sodium lauryl sulfate': { score: 25, reason: 'Harsh surfactant; can strip natural oils and irritate' },\n    'phenoxyethanol': { score: 45, reason: 'Preservative with moderate safety concerns' },\n    'retinol': { score: 82, reason: 'Vitamin A derivative; anti-aging but can be irritating' },\n    'ascorbic acid': { score: 88, reason: 'Vitamin C; brightening and antioxidant properties' }\n  };\n\n  const substitutes = {\n    'methylparaben': [\n      { name: 'leucidal liquid', score: 75, type: 'Fermented radish root; natural preservative' },\n      { name: 'sodium benzoate', score: 65, type: 'Food-grade preservative; safer alternative' }\n    ],\n    'parfum': [\n      { name: 'fragrance-free formulation', score: 95, type: 'Remove entirely for sensitive skin' },\n      { name: 'essential oil blend', score: 60, type: 'Natural fragrance (still potential allergen)' }\n    ],\n    'sodium lauryl sulfate': [\n      { name: 'sodium cocoyl isethionate', score: 78, type: 'Gentle coconut-derived surfactant' },\n      { name: 'decyl glucoside', score: 82, type: 'Mild sugar-based cleanser' }\n    ]\n  };\n\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setTimeout(() => simulateOCR(), 1500);\n      };\n      reader.readAsDataURL(file);\n      setStep('processing');\n    }\n  };\n\n  const simulateOCR = () => {\n    const mockIngredients = [\n      'Aqua', 'Glycerin', 'Niacinamide', 'Butylene Glycol', \n      'Phenoxyethanol', 'Parfum', 'Methylparaben'\n    ];\n    setStep('results');\n    analyzeIngredients(mockIngredients);\n  };\n\n  const analyzeIngredients = (ingList) => {\n    const analyzed = ingList.map(ing => {\n      const normalized = ing.toLowerCase();\n      const data = healthScoreDB[normalized] || { \n        score: 60, \n        reason: 'Common ingredient; limited safety data available' \n      };\n      return {\n        ingredient: ing,\n        normalized,\n        ...data\n      };\n    });\n\n    const avgScore = Math.round(\n      analyzed.reduce((sum, item) => sum + item.score, 0) / analyzed.length\n    );\n\n    const flaggedIngredients = analyzed.filter(i => i.score < 50);\n\n    setAnalysis({\n      ingredients: analyzed,\n      productScore: avgScore,\n      flaggedIngredients: flaggedIngredients\n    });\n\n    // If there are flagged ingredients, get product recommendations\n    if (flaggedIngredients.length > 0) {\n      getProductRecommendations(flaggedIngredients.map(i => i.ingredient));\n    }\n  };\n\n  const getProductRecommendations = async (flaggedIngredients) => {\n    console.log('Fetching product recommendations for:', flaggedIngredients);\n    setLoadingRecommendations(true);\n    setApiError(null);\n    \n    try {\n      const response = await fetch('http://localhost:8000/recommend-products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          flagged_ingredients: flaggedIngredients,\n          original_category: 'serum', // Default category\n          skin_type: ['combination', 'oily'],\n          concerns: ['acne', 'texture'],\n          max_results: 5\n        })\n      });\n      \n      console.log('Response status:', response.status);\n      \n      if (response.ok) {\n        const recommendations = await response.json();\n        console.log('Received recommendations:', recommendations);\n        setProductRecommendations(recommendations);\n        setShowRecommendations(true);\n      } else {\n        const errorText = await response.text();\n        console.error('API Error:', response.status, errorText);\n        setApiError(`API Error: ${response.status} - ${errorText}`);\n        setProductRecommendations([]);\n        setShowRecommendations(true);\n      }\n    } catch (error) {\n      console.error('Network Error fetching product recommendations:', error);\n      setApiError(`Network Error: ${error.message}`);\n      setProductRecommendations([]);\n      setShowRecommendations(true);\n    } finally {\n      setLoadingRecommendations(false);\n    }\n  };\n\n  const getPriceComparison = async (productId) => {\n    console.log('Fetching price comparison for product:', productId);\n    \n    try {\n      const response = await fetch(`http://localhost:8000/price-comparison/${productId}`);\n      console.log('Price comparison response status:', response.status);\n      \n      if (response.ok) {\n        const priceData = await response.json();\n        console.log('Received price data:', priceData);\n        setPriceComparison(priceData);\n      } else {\n        console.error('Price comparison API Error:', response.status, await response.text());\n      }\n    } catch (error) {\n      console.error('Network Error fetching price comparison:', error);\n    }\n  };\n\n  const getScoreColor = (score) => {\n    if (score >= 76) return 'text-green-600';\n    if (score >= 51) return 'text-yellow-600';\n    if (score >= 26) return 'text-orange-600';\n    return 'text-red-600';\n  };\n\n  const getScoreIcon = (score) => {\n    if (score >= 76) return <CheckCircle className=\"w-5 h-5\" />;\n    if (score >= 51) return <Info className=\"w-5 h-5\" />;\n    if (score >= 26) return <AlertTriangle className=\"w-5 h-5\" />;\n    return <XCircle className=\"w-5 h-5\" />;\n  };\n\n  const getScoreLabel = (score) => {\n    if (score >= 76) return 'Healthy / Preferred';\n    if (score >= 51) return 'Generally Okay';\n    if (score >= 26) return 'Use with Caution';\n    return 'Avoid';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center gap-3 mb-3\">\n            <Sparkles className=\"w-8 h-8 text-indigo-600\" />\n            <h1 className=\"text-4xl font-bold text-gray-800\">BottleScan</h1>\n          </div>\n          <p className=\"text-gray-600\">Skincare OCR & Ingredient Health Advisor</p>\n          <p className=\"text-sm text-gray-500 mt-2\">Powered by Kaggle Skincare Dataset</p>\n        </div>\n\n        {/* Upload Section */}\n        {step === 'upload' && (\n          <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n            {/* ... Upload UI */}\n          </div>\n        )}\n\n        {/* Processing */}\n        {step === 'processing' && (\n          <div className=\"bg-white rounded-2xl shadow-lg p-8 text-center\">\n            {/* ... Processing UI */}\n          </div>\n        )}\n\n        {/* Results */}\n        {step === 'results' && analysis && (\n          <div className=\"space-y-6\">\n            {/* Overall Score Card */}\n            <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n              {/* ... Overall Score UI */}\n            </div>\n\n            {/* Ingredient Breakdown */}\n            <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n              {/* ... Ingredient Breakdown UI */}\n            </div>\n\n            {/* Product Recommendations */}\n            {showRecommendations && (\n              <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n                {/* ... Product Recommendations UI */}\n                {productRecommendations.length > 0 && (\n                  <div className=\"grid gap-6 md:grid-cols-2\">\n                    {productRecommendations.map((product, idx) => (\n                      <div key={idx} className=\"border border-gray-200 rounded-xl p-6 hover:shadow-md transition-shadow\">\n                        {/* ... Product card UI */}\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {/* Price Comparison */}\n                {priceComparison && (\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                    <h4 className=\"font-semibold mb-3\">\n                      💰 Price Comparison for {priceComparison.product_name}\n                    </h4>\n                    <div className=\"grid gap-3 md:grid-cols-2\">\n                      {priceComparison.price_sources.map((source, idx) => (\n                        <div\n                          key={idx}\n                          className=\"flex items-center justify-between p-3 bg-white rounded border\"\n                        >\n                          <div>\n                            <div className=\"font-medium\">{source.retailer}</div>\n                            <div className=\"text-sm text-gray-600\">{source.shipping}</div>\n                          </div>\n                          <div className=\"text-right\">\n                            <div className=\"font-bold text-green-600\">\n                              ${source.price.toFixed(2)}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">\n                              {source.in_stock ? \"In Stock\" : \"Out of Stock\"}\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Substitutes */}\n            {analysis.flaggedIngredients.length > 0 && (\n              <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n                {/* ... Substitutes UI */}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Footer Info */}\n        <div className=\"mt-8 text-center text-sm text-gray-600\">\n          <p>Health scores based on ingredient frequency analysis, safety databases, and clinical research</p>\n          <p className=\"mt-1\">Data source: Skincare Products Clean Dataset (Kaggle)</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BottleScanDemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}